== Ne yaptık?

Komutlar,

  $ git checkout auth
  $ git checkout -b cancan

  $ vim Gemfile
  gem 'cancan'

  $ bundle

  $ rails generate cancan:ability

  $ rails generate migration AddUserOnPosts
  $ vim db/migrate/XXX_add_user_on_posts.rb
  def up
    add_column :posts, :user_id, :reference
  end
  $ rake db:migrate

  $ vim app/models/post.rb
  belongs_to :user

  $ vim app/controllers/post_controller.rb
  load_and_authorize_resource

  def create
    @post = Post.new(params[:post])
    @post.user = current_user
    ...
  end
  def update
    @post = Post.find(params[:post])
    @post.user = current_user
    ...
  end

Test için http://1.2.3.4:3001/ adresine gidin, kullanıcı giriş yapdığı halde
sayfalara erişemediğini göreceksiniz, ability'yi ayarlayalım,

  $ vim app/models/ability.rb
  def initialize(user)
    user ||= User.new # guest user (not logged in)

    if user.persisted?
      can :read, Post
      can :manage, Post, :user_id => user.id
    else
      # Guest user are not allowed
    end

  end

Owner/email alanı ekleyelim,

  $ vim app/views/posts/index.html.erb
  <th>Owner</th>
  <td><%= post.user.email %></td>

  $ vim app/views/posts/show.html.erb
  <p>
    <b>Owner:</b>
    <%= @post.user.email %>
  </p>

  $ rake db:reset

Post oluşturan düzenleyip/silebilsin, buna görede
izinsiz kullanıcılara bu linkler gösterilmesin,

  $ vim app/views/posts/index.html.erb
  <% if can? :edit, post %>
    <%= link_to 'Edit', edit_post_path(post) %>
  <% end %>
  <% if can? :destroy, post %>
    <%= link_to 'Destroy', post, confirm: 'Are you sure?', method: :delete %>
  <% end %>

  $ vim app/views/posts/show.html.erb
  <% if can? :edit, @post %>
    <%= link_to 'Edit', edit_post_path(@post) %> |
  <% end %>

Test için http://1.2.3.4:3001/ adresine gidin, kullanıcı giriş yapar, yeni post
oluşturur, oluşturduğunu düzenler/siler/görürken, diğerleri sadece görür.

Flash mesajlarını göstermek için,

        $ vim app/views/layouts/application.html.erb
        <div class="container" style="margin-bottom: 80px;" >
           <div class="content">
             <div class="row">
               <div class="span9">
                <% [:notice, :error, :alert].each do |level| %>
                  <% unless flash[level].blank? %>
                    <div data-alert="alert" class="alert alert-<%= level %> fade in">
                        <a class="close" data-dismiss="alert" href="#">&times;</a>
                        <%= content_tag :p, simple_format(flash[level]) %>
                    </div>
                   <% end %>
                <% end %>
               </div>
           </div>
        </div>

Test: http://1.2.3.4:3001/login adresine gidip "seyyah":"secret" çiftini
deneyin.

== Kaynaklar

- Cancan: <https://github.com/seyyah/my-devise-cancan/tree/cancan>

- Simple auth:
<http://jeremyjbarth.blogspot.com/2011/10/rails-31-simple-custom-authentication.html>
